diff --git a/backend/docker/docker-entrypoint.sh b/backend/docker/docker-entrypoint.sh
index 96d351071..318c03638 100755
--- a/backend/docker/docker-entrypoint.sh
+++ b/backend/docker/docker-entrypoint.sh
@@ -384,6 +384,11 @@ case "$1" in
       echo "Running celery export worker healthcheck..."
       exec celery -A baserow inspect ping -d "export-worker@$HOSTNAME" -t 10 "${@:2}"
     ;;
+    celery-cloudlanguagetoolsworker)
+      BASEROW_CELERY_CLT_WORKER_NUM=${BASEROW_CELERY_CLT_WORKER_NUM:-2}
+      echo "Running celery cloudlanguagetools worker with ${BASEROW_CELERY_CLT_WORKER_NUM} workers..."
+      start_celery_worker --concurrency ${BASEROW_CELERY_CLT_WORKER_NUM} -Q cloudlanguagetools -n cloudlanguagetools-worker@%h "${@:2}"
+    ;;    
     celery-beat)
       # Delay the beat startup as there seems to be bug where the other celery workers
       # starting up interfere with or break the lock obtained by it. Without this the
diff --git a/backend/pytest.ini b/backend/pytest.ini
index e316a805f..92dd72cf7 100644
--- a/backend/pytest.ini
+++ b/backend/pytest.ini
@@ -1,7 +1,7 @@
 [pytest]
 DJANGO_SETTINGS_MODULE = baserow.config.settings.test
 python_files = test_*.py
-addopts = --disable-warnings
+addopts = --disable-warnings --reuse-db
 env =
     SECRET_KEY = test
     BASEROW_JWT_SIGNING_KEY = test
diff --git a/backend/src/baserow/config/settings/base.py b/backend/src/baserow/config/settings/base.py
index 26341bb3c..c6fdd7d24 100644
--- a/backend/src/baserow/config/settings/base.py
+++ b/backend/src/baserow/config/settings/base.py
@@ -8,6 +8,7 @@ from decimal import Decimal
 from ipaddress import ip_network
 from pathlib import Path
 from urllib.parse import urljoin, urlparse
+import pprint
 
 from django.core.exceptions import ImproperlyConfigured
 
@@ -44,6 +45,43 @@ class Everything(object):
 if "*" in FEATURE_FLAGS or "pytest" in sys.modules:
     FEATURE_FLAGS = Everything()
 
+# sentry setup
+# ============
+
+import sentry_sdk
+from sentry_sdk.integrations.django import DjangoIntegration
+from sentry_sdk.integrations.celery import CeleryIntegration
+
+def traces_sampler(sampling_context):
+    # this one appears very frequently
+    if sampling_context.get('asgi_scope', {}).get('path', None) in ['/_health/', '/api/_health/']:
+        return 0.001
+        
+    # the following are quite frequent
+    celery_task_name = sampling_context.get('celery_job', {}).get('task', None)
+    if celery_task_name in [
+        'baserow.core.jobs.tasks.clean_up_jobs',
+        'baserow.core.action.tasks.cleanup_old_actions',
+        'baserow.core.trash.tasks.mark_old_trash_for_permanent_deletion',
+        'baserow.core.trash.tasks.permanently_delete_marked_trash',
+        'baserow.contrib.database.export.tasks.clean_up_old_jobs'
+    ]:
+        return 0.1
+
+    # if more information is needed about transactions, uncomment the following
+    #pprint.pprint(sampling_context, width=2000, compact=True)
+    return 1.0
+
+sentry_sdk.init(
+    dsn="https://f7a7fa7dfe5f412f852c3bfe2defa091@o968582.ingest.sentry.io/6742581",
+    integrations=[DjangoIntegration(signals_spans=False, middleware_spans=False), CeleryIntegration()],
+    send_default_pii=True,
+    traces_sampler=traces_sampler,
+)
+
+# sentry setup end
+# ================
+
 BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
 
 BASEROW_PLUGIN_DIR_PATH = Path(os.environ.get("BASEROW_PLUGIN_DIR", "/baserow/plugins"))
@@ -175,6 +213,8 @@ CELERY_TASK_ROUTES = {
     "baserow.core.usage.tasks": {"queue": BASEROW_GROUP_STORAGE_USAGE_QUEUE},
     "baserow.contrib.database.table.tasks.run_row_count_job": {"queue": "export"},
     "baserow.core.jobs.tasks.clean_up_jobs": {"queue": "export"},
+    # cloudlanguagetools jobs go on a separate queue
+    "*cloudlanguagetools*": {"queue": "cloudlanguagetools"},
 }
 CELERY_SOFT_TIME_LIMIT = 60 * 5  # 5 minutes
 CELERY_TIME_LIMIT = CELERY_SOFT_TIME_LIMIT + 60  # 60 seconds
@@ -226,6 +266,9 @@ else:
             "PASSWORD": os.getenv("DATABASE_PASSWORD", "baserow"),
             "HOST": os.getenv("DATABASE_HOST", "db"),
             "PORT": os.getenv("DATABASE_PORT", "5432"),
+            "TEST": {
+                "NAME": os.getenv("DATABASE_TEST_NAME", default="vocabai_words_test"),
+            },
         }
     }
     if "DATABASE_OPTIONS" in os.environ:
diff --git a/backend/src/baserow/core/models.py b/backend/src/baserow/core/models.py
index 9ccb2dc90..3d6a3c41b 100755
--- a/backend/src/baserow/core/models.py
+++ b/backend/src/baserow/core/models.py
@@ -208,7 +208,7 @@ class UserProfile(models.Model):
     # TODO Remove null=True in a future release.
     email_verified = models.BooleanField(null=True, default=False)
     # TODO Remove null=True in a future release.
-    completed_onboarding = models.BooleanField(null=True, default=False)
+    completed_onboarding = models.BooleanField(null=True, default=True)
 
     def iat_before_last_password_change(self, iat: int) -> bool:
         """
diff --git a/supervisor/default_baserow_env.sh b/supervisor/default_baserow_env.sh
index d27ba5d42..c4f4ac16b 100755
--- a/supervisor/default_baserow_env.sh
+++ b/supervisor/default_baserow_env.sh
@@ -70,6 +70,7 @@ export DJANGO_SETTINGS_MODULE=${DJANGO_SETTINGS_MODULE:-$DEFAULT_DJANGO_SETTINGS
 export BASEROW_WEB_FRONTEND_STARTUP_COMMAND="${BASEROW_WEB_FRONTEND_STARTUP_COMMAND:-$DEFAULT_WEB_FRONTEND_STARTUP_COMMAND}"
 export BASEROW_BACKEND_STARTUP_COMMAND="${BASEROW_BACKEND_STARTUP_COMMAND:-$DEFAULT_BACKEND_STARTUP_COMMAND}"
 export BASEROW_CELERY_WORKER_STARTUP_COMMAND="${BASEROW_CELERY_WORKER_STARTUP_COMMAND:-$DEFAULT_CELERY_WORKER_STARTUP_COMMAND}"
+export BASEROW_CELERY_CLT_WORKER_STARTUP_COMMAND="celery-cloudlanguagetoolsworker"
 export BASEROW_CELERY_EXPORT_WORKER_STARTUP_COMMAND="${BASEROW_CELERY_EXPORT_WORKER_STARTUP_COMMAND:-$DEFAULT_CELERY_EXPORT_WORKER_STARTUP_COMMAND}"
 export BASEROW_CELERY_BEAT_STARTUP_COMMAND="${BASEROW_CELERY_BEAT_STARTUP_COMMAND:-$DEFAULT_CELERY_BEAT_STARTUP_COMMAND}"
 export XDG_CONFIG_HOME=/home/$DOCKER_USER/
diff --git a/supervisor/supervisor.conf b/supervisor/supervisor.conf
index 0856cd2fc..a2d9f7918 100644
--- a/supervisor/supervisor.conf
+++ b/supervisor/supervisor.conf
@@ -60,6 +60,19 @@ priority=2
 startretries=3
 startsecs=30
 
+[program:celerycltworker]
+user=%(ENV_DOCKER_USER)s
+directory=/baserow/backend
+command=/baserow/supervisor/wrapper.sh CYAN CLT_WORKER ./docker/docker-entrypoint.sh %(ENV_BASEROW_CELERY_CLT_WORKER_STARTUP_COMMAND)s
+stdout_logfile=/dev/stdout
+stdout_logfile_maxbytes=0
+stderr_logfile=/dev/stdout
+stderr_logfile_maxbytes=0
+autostart=true
+priority=2
+startretries=3
+startsecs=30
+
 [program:exportworker]
 user=%(ENV_DOCKER_USER)s
 directory=/baserow/backend
diff --git a/web-frontend/config/nuxt.config.base.js b/web-frontend/config/nuxt.config.base.js
index fbad0570f..9bbb00f7f 100644
--- a/web-frontend/config/nuxt.config.base.js
+++ b/web-frontend/config/nuxt.config.base.js
@@ -35,6 +35,7 @@ export default function (
     modules,
     buildModules: ['@nuxtjs/stylelint-module'],
     sentry: {
+      dsn: 'https://33f709910b214ed282315bd91344bae0@o968582.ingest.sentry.io/6742673',
       clientIntegrations: {
         Dedupe: {},
         ExtraErrorData: {},
diff --git a/web-frontend/modules/core/assets/scss/components/auth.scss b/web-frontend/modules/core/assets/scss/components/auth.scss
index 209e09580..2faf0e431 100644
--- a/web-frontend/modules/core/assets/scss/components/auth.scss
+++ b/web-frontend/modules/core/assets/scss/components/auth.scss
@@ -12,11 +12,10 @@
 }
 
 .auth__logo {
-  height: 16px;
-  margin-bottom: 48px;
+  margin-bottom: 20px;
 
   & img {
-    height: 100%;
+    width: 100%;
   }
 }
 
diff --git a/web-frontend/modules/core/components/ExternalLinkBaserowLogo.vue b/web-frontend/modules/core/components/ExternalLinkBaserowLogo.vue
index 5060281fa..aabcd5ac1 100644
--- a/web-frontend/modules/core/components/ExternalLinkBaserowLogo.vue
+++ b/web-frontend/modules/core/components/ExternalLinkBaserowLogo.vue
@@ -1,12 +1,13 @@
 <template>
   <a
-    href="https://baserow.io"
+    href="https://app.vocab.ai"
     target="_blank"
-    title="Baserow - open source no-code database tool and Airtable alternative"
+    title="Vocab.Ai - the Language Learning Spreadsheet"
   >
-    <Logo
-      height="14"
-      alt="Baserow - open source no-code database tool and Airtable alternative"
+    <img
+      src="@baserow/modules/core/static/img/vocabai_logo.png"
+      alt="Vocab Words - the Language Learning Spreadsheet"
+      style="width: 110px;"
     />
   </a>
 </template>
diff --git a/web-frontend/modules/core/components/auth/Login.vue b/web-frontend/modules/core/components/auth/Login.vue
index 5ef8733e8..0f38acc92 100644
--- a/web-frontend/modules/core/components/auth/Login.vue
+++ b/web-frontend/modules/core/components/auth/Login.vue
@@ -6,7 +6,7 @@
       <div v-if="displayHeader">
         <div class="auth__logo">
           <nuxt-link :to="{ name: 'index' }">
-            <Logo />
+            <img src="@baserow/modules/core/static/img/vocabai_banner.png" alt="" />
           </nuxt-link>
         </div>
         <div class="auth__head">
diff --git a/web-frontend/modules/core/components/dashboard/DashboardHelp.vue b/web-frontend/modules/core/components/dashboard/DashboardHelp.vue
index a5f3438f5..139e881c0 100644
--- a/web-frontend/modules/core/components/dashboard/DashboardHelp.vue
+++ b/web-frontend/modules/core/components/dashboard/DashboardHelp.vue
@@ -1,65 +1,13 @@
 <template>
   <div class="dashboard__help">
-    <div class="dashboard__help-title">{{ $t('dashboard.alertTitle') }}</div>
+    <img src="@baserow/modules/core/static/img/vocabai_banner.png" alt="" style="height: 80px;"/>
     <p class="dashboard__help-description">
-      {{ $t('dashboard.alertText') }}
+      Introducing <b>Vocab.Ai</b> - The revolutionary language learning spreadsheet designed to supercharge your vocabulary and sentence mastery!
+      <br/>
+      Need help ? <a href="https://lucw.medium.com/unlock-the-power-of-pinyin-vocab-ais-edc5db83a1a9" target="_blank">Chinese and Pinyin tutorial</a>
+      <br/>
+      <i>note: Vocab.Ai is based on open-source database <a href="https://baserow.io" target="_blank">Baserow</a></i>
     </p>
-    <Button
-      type="primary"
-      icon="baserow-icon-gitlab"
-      tag="a"
-      href="https://gitlab.com/baserow/baserow"
-      target="_blank"
-      rel="noopener noreferrer"
-    >
-      {{ $t('dashboard.starOnGitlab') }}
-    </Button>
-    <Button
-      v-tooltip="$t('dashboard.shareOnTwitter')"
-      type="primary"
-      icon="baserow-icon-twitter"
-      tag="a"
-      :href="`https://twitter.com/intent/tweet?url=https://baserow.io&hashtags=opensource,nocode,database,baserow&text=${encodeURI(
-        $t('dashboard.tweetContent')
-      )}`"
-      target="_blank"
-      rel="noopener noreferrer"
-    >
-    </Button>
-    <Button
-      v-tooltip="$t('dashboard.shareOnReddit')"
-      type="primary"
-      tag="a"
-      icon="baserow-icon-reddit"
-      :href="
-        'https://www.reddit.com/submit?url=https://baserow.io&title=' +
-        encodeURI($t('dashboard.redditTitle'))
-      "
-      target="_blank"
-      rel="noopener noreferrer"
-    >
-    </Button>
-    <Button
-      v-tooltip="$t('dashboard.shareOnFacebook')"
-      type="primary"
-      tag="a"
-      icon="baserow-icon-facebook"
-      href="https://www.facebook.com/sharer/sharer.php?u=https://baserow.io"
-      target="_blank"
-      rel="noopener noreferrer"
-    >
-    </Button>
-    <Button
-      v-tooltip="$t('dashboard.shareOnLinkedIn')"
-      type="primary"
-      tag="a"
-      icon="baserow-icon-linkedin"
-      href="https://www.linkedin.com/sharing/share-offsite/?url=https://baserow.io"
-      target="_blank"
-      rel="noopener noreferrer"
-      class="button button--primary dashboard__help-button"
-    >
-    </Button>
   </div>
 </template>
 
diff --git a/web-frontend/modules/core/head.js b/web-frontend/modules/core/head.js
index 065c1e34e..5ba1f791b 100644
--- a/web-frontend/modules/core/head.js
+++ b/web-frontend/modules/core/head.js
@@ -1,6 +1,6 @@
 export default {
-  title: 'Baserow',
-  titleTemplate: '%s // Baserow',
+  title: 'Vocab Words',
+  titleTemplate: '%s // Vocab Words',
   meta: [
     { charset: 'utf-8' },
     {
